Building Blocks are higher-level components that provide reusable features to microservices. 
They sit on top of the Kernel and help implement common patterns.


Provide ready-to-use reusable components across services.
Implement common design patterns like CQRS, Event Sourcing, API Gateway.
Help in reducing duplication and ensuring best practices.

What to Include in Building Blocks?
Authentication & Authorization (JWT, OAuth, IdentityServer)
 Messaging (Kafka, RabbitMQ, Event Bus integration)
 Distributed Caching (Redis, MemoryCache)
Background Jobs (Hangfire, Quartz.NET)
 Rate Limiting & API Throttling

example:

public class RedisCacheService
{
    private readonly IDatabase _cacheDb;

    public RedisCacheService(IConnectionMultiplexer redis)
    {
        _cacheDb = redis.GetDatabase();
    }

    public async Task SetCacheAsync(string key, string value, TimeSpan expiration)
    {
        await _cacheDb.StringSetAsync(key, value, expiration);
    }
}

Building Blocks (Reusable Components) ==> Implements common patterns like JWT, caching, and messaging.